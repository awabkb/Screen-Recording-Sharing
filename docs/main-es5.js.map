{"version":3,"sources":["webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/recordings/recordings.component.ts","webpack:///src/app/recordings/recordings.component.html","webpack:///src/app/sidenav/sidenav.component.html","webpack:///src/app/sidenav/sidenav.component.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/reset/reset.component.ts","webpack:///src/app/reset/reset.component.html","webpack:///src/app/_services/user.service.ts","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/video-page/video-page.component.ts","webpack:///src/app/video-page/video-page.component.html","webpack:///src/app/record-video/record-video.component.html","webpack:///src/app/record-video/record-video.component.ts","webpack:///src/app/sharing/sharing.component.ts","webpack:///src/app/sharing/sharing.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/_services/alertify.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["RegisterComponent","fb","auth","router","userService","registerForm","group","fullName","required","email","password","minLength","value","createUserWithEmailAndPassword","then","res","user","updateProfile","displayName","err","console","log","navigate","createUser","environment","production","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","RecordingsComponent","afStorage","alertify","dialog","videos","subscribe","u","ref","uid","listAll","items","forEach","i","getDownloadURL","url","vid","Name","name","Url","FullPath","fullPath","push","video","confirm","error","message","splice","indexOf","dialogRef","open","width","data","videoURL","SidenavComponent","route","loggedin","signOut","DashboardComponent","AppComponent","title","ResetComponent","passwordReset","controls","sendPasswordResetEmail","s","resetPasswordByEmail","UserService","db","ProfileComponent","profileForm","setValue","updateEmail","updatePassword","AppModule","initializeApp","VideoPageComponent","RecordVideoComponent","recorded","clicked","save","recordedChunks","percentage","color","mode","videoElement","src","startRecording","muted","srcObject","getTracks","track","stop","delay","superBuffer","Blob","window","URL","createObjectURL","navigator","mediaDevices","getDisplayMedia","displayStream","oninactive","document","getElementById","click","getVideoTracks","videoTrack","getUserMedia","audio","audioStream","getAudioTracks","audioTrack","stream","MediaStream","options","videoBitsPerSecond","mimeType","recorder","MediaRecorder","ondataavailable","handleDataAvailable","bind","start","waitTen","warning","onstop","event","size","metadata","contentType","task","child","videoName","put","snapshotChanges","bytesTransferred","totalBytes","success","ms","Promise","resolve","setTimeout","videoElementRef","nativeElement","upload","SharingComponent","close","encodedVideoURL","encodeURI","encodedVideoTitle","videoTitle","facebookURL","twitterURL","linkedinURL","whatsappURL","redirectUnauthorizedToLogin","redirectToDashboard","redirectToDashboardWithLogger","next","state","info","routes","path","component","AppRoutingModule","forRoot","LoginComponent","loginForm","invalid","signInWithEmailAndPassword","onLogin","AlertifyService","okCallback","e","oncancel","bootstrapModule","webpackEmptyAsyncContext","req","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n\n  constructor(private fb: FormBuilder,\n    private auth: AngularFireAuth,\n    private router: Router,\n    private userService:UserService\n    ) { }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      fullName: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n      ]),\n    });\n  }\n  createUser() {\n    const { email, password, fullName } = this.registerForm.value;\n    this.auth.createUserWithEmailAndPassword(email, password).then((res)=>{\n      \n      res.user?.updateProfile({displayName: fullName}).catch(err=>console.log(err));\n\n      this.router.navigate(['']);\n\n    });\n}\n}","<form class=\"form\" [formGroup]=\"registerForm\">\n  <div style=\"margin: 20px;text-align: center;\">\n    <h2>Create a new Account</h2>\n  </div>\n  <mat-form-field class=\"form-control\">\n    <mat-label>Your Full Name</mat-label>\n    <input matInput formControlName=\"fullName\" type=\"text\" />\n  </mat-form-field>\n  <mat-form-field class=\"form-control\">\n    <mat-label>Your email</mat-label>\n    <input matInput formControlName=\"email\" type=\"email\" />\n  </mat-form-field>\n  <mat-form-field class=\"form-control\">\n    <mat-label>Your password</mat-label>\n    <input matInput formControlName=\"password\" type=\"password\" />\n  </mat-form-field>\n  <div class=\"form-footer\">\n    <button mat-stroked-button (click)=\"createUser()\">Create a user</button>\n    <a routerLink=\"/login\">Go to login</a>\n  </div>\n  <!-- <button mat-button (click)=\"createUserViaGoogle()\">Login with Google</button> -->\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: 'AIzaSyCb4B0h1IKlWCeFnhoZSZqyshMymzz6FRs',\n    authDomain: 'shareit-574a3.firebaseapp.com',\n    projectId: 'shareit-574a3',\n    storageBucket: 'shareit-574a3.appspot.com',\n    messagingSenderId: '601309866455',\n    appId: '1:601309866455:web:c4b66c3cdb524a81b1c392',\n    measurementId: 'G-L42GFVNJ2G',\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SharingComponent } from '../sharing/sharing.component';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { UserService } from '../_services/user.service';\ninterface Video {\n  Name: string;\n  Url: string;\n  FullPath: string;\n}\n\n\n@Component({\n  selector: 'app-recordings',\n  templateUrl: './recordings.component.html',\n  styleUrls: ['./recordings.component.scss'],\n})\nexport class RecordingsComponent implements OnInit, AfterViewInit {\n  videos: Video[] = [];\n  constructor(\n    private afStorage: AngularFireStorage,\n    private alertify: AlertifyService,\n    private userService: UserService,\n    private auth: AngularFireAuth,\n    public dialog: MatDialog\n  ) {}\n  ngAfterViewInit(): void {\n  }\n\n  ngOnInit(): void {\n    this.auth.user.subscribe(\n      (u) => {\n        if (u) {\n          this.afStorage\n            .ref(u.uid)\n            .listAll()\n            .subscribe((res) => {\n              res.items.forEach((i) => {\n                i.getDownloadURL().then((url) => {\n                  const vid = {\n                    Name: i.name,\n                    Url: url,\n                    FullPath: i.fullPath,\n                  };\n                  this.videos.push(vid);\n                });\n              });\n              console.log(this.videos);\n            });\n        }\n      },\n      (err) => {},\n      () => {\n        console.log(this.videos);\n      }\n    );\n  }\n\n  openVideo() {}\n\n  removeVideo(video: Video) {\n    this.alertify.confirm(\n      'Delete Video',\n      `Are you sure you want to delete this video: \"${video.Name}\"`,\n      () => {\n        this.afStorage\n          .ref(video.FullPath)\n          .delete()\n          .subscribe(\n            (res) => {\n              console.log(res);\n            },\n            (err) => {\n              this.alertify.error('Failed to Delete Video');\n            },\n            () => {\n              this.alertify.message('Video Deleted');\n              this.videos.splice(this.videos.indexOf(video), 1);\n            }\n          );\n      }\n    );\n  }\n  shareVideo(video: Video){\n    const dialogRef = this.dialog.open(SharingComponent,{\n      width: '550px',\n      data:{\n        videoURL:video.Url\n      }\n    });\n  }\n}\n","<div style=\"margin: 20px; max-width: 100%;align-items: center;\">\n  <mat-card style=\"margin-bottom: 10px;max-width: 1200px;\" *ngFor=\"let video of videos; let i = index\">\n    <h2>{{ i + 1 }}. {{ video.Name }}</h2>\n    <mat-grid-list cols=\"2\" rowHeight=\"2:1\">\n      <mat-grid-tile>\n          <video src=\"{{ video.Url }}\" id=\"my-video\" controls width=\"100%\" height=\"auto\"></video>\n        \n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <div class=\"btnsCon\">\n          <button mat-flat-button color=\"warn\"(click)=\"shareVideo(video)\" >Share</button>\n          <button mat-stroked-button style=\"color: red\" (click)=\"removeVideo(video)\">\n            Delete\n          </button>\n          <button mat-stroked-button fileSaver [method]=\"'GET'\" [fileName]=\"'videoName.mp4'\" [url]=\"video.Url\">\n            Download\n          </button>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </mat-card>\n</div>","<mat-drawer-container class=\"example-container\" style=\"height: 100%;\">\n    <mat-drawer *ngIf=\"this.loggedin\" style=\"width: 250px;\" mode=\"side\" opened>\n        <h2 style=\"padding: 20px;color: #3a2b02;cursor: pointer;\" (click)=\"this.route.navigate([''])\">Screen Recording App</h2>\n        <mat-nav-list>\n            <a  mat-list-item routerLink=\"profile\">Profile</a>\n            <a  mat-list-item routerLink=\"record\">New Record</a>\n            <a  mat-list-item routerLink=\"recordings\">Recordings</a>\n          </mat-nav-list>\n          <div style=\"position:absolute;bottom:0;\">\n            <button mat-stroked-button id=\"logout-btn\" (click)=\"logout()\">Logout</button>\n          </div>\n          \n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n    </mat-drawer-content>\n  </mat-drawer-container>","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n})\nexport class SidenavComponent implements OnInit {\n  compName: string;\n  loggedin = false;\n  constructor(public route: Router, private auth: AngularFireAuth,private alertify:AlertifyService) {}\n\n  ngOnInit(): void {\n    this.auth.user.subscribe(\n      user => {\n        console.log(user);\n        if(user) {\n          this.loggedin = true;\n        }\n      });\n    \n  }\n  logout() {\n    this.auth\n      .signOut()\n      .then(() => {\n        this.alertify.message('Logged out');\n        this.route.navigate(['login']);\n        this.loggedin=false;\n      })\n      .catch((err) => console.log('failed to logout'));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireAuthGuard } from '@angular/fire/auth-guard';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'VideoSharing';\n  constructor(private auth: AngularFireAuth) {}\n  ngOnInit(): void {\n    \n  }\n}\n","<app-sidenav ></app-sidenav>","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.scss'],\n})\nexport class ResetComponent implements OnInit {\n  passwordReset: FormGroup;\n\n  constructor(\n    private auth: AngularFireAuth,\n    private fb: FormBuilder,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit(): void {\n    this.passwordReset = this.fb.group({\n      email: new FormControl('', Validators.email),\n    });\n  }\n  resetPasswordByEmail(){\n    const email= this.passwordReset.controls['email'].value;\n    this.auth.sendPasswordResetEmail(email).then(s=>{\n      console.log(s);\n      this.alertify.message('Password reset email sent');\n    }).catch(err=>this.alertify.error('Failed to send'));\n  }\n}","<form [formGroup]=\"passwordReset\">\n  <div style=\"margin: 20px\">\n    <h2>Reset Password By Email</h2>\n  </div>\n  <mat-form-field class=\"form-control\">\n    <mat-label>Your Email Address</mat-label>\n    <input matInput formControlName=\"email\" type=\"email\" />\n  </mat-form-field>\n  <div style=\"margin-top: 20px; text-align: center;\">\n    <button mat-stroked-button (click)=\"resetPasswordByEmail()\">\n      Send Email\n    </button>\n  </div>\n  <div style=\"margin-top: 20px; text-align: center;\">\n    <a href=\"login\">Login</a>\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { FirebaseApp } from '@angular/fire';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  user: any;\n  constructor(private auth:AngularFireAuth, private db: AngularFireDatabase) {\n    this.auth.user.subscribe(u=>this.user=u);\n    \n   }\n\n  // updateUserFields(){\n  //   if(this.user)\n  //   console.log(this.user.uid);\n  //   const dbRef =this.db.database.ref(`users/${this.user.uid}`);\n  //   dbRef.push()\n  // }\n\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  profileForm: FormGroup;\n  user: any;\n  constructor(private fb: FormBuilder, private auth: AngularFireAuth) { }\n\n  ngOnInit(): void {\n    this.auth.user.subscribe(user => {\n      if(user){\n        console.log(user);\n        this.user = user;\n        this.profileForm.controls['fullName'].setValue(user?.displayName);\n        this.profileForm.controls['email'].setValue(user?.email);\n\n      }\n    });\n    this.profileForm = this.fb.group({\n      fullName: new FormControl(''),\n      email: new FormControl(''),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n      ]),\n    });\n\n  }\n\n  updateProfile(){\n    const {email, password, fullName} = this.profileForm.value;\n    this.auth.user.subscribe(user => {\n      if(fullName)\n      user?.updateProfile({displayName: fullName}).catch(err => console.log(err));\n      if(email)\n      user?.updateEmail(email).catch(err => console.log(err));\n      if(password)\n      user?.updatePassword(password).catch(err => console.log(err));\n    });\n  }\n}\n","<form class=\"form\" [formGroup]=\"profileForm\">\n    <mat-form-field class=\"form-control\">\n      <mat-label>Your Full Name</mat-label>\n      <input matInput formControlName=\"fullName\" type=\"text\" />\n    </mat-form-field>\n    <mat-form-field class=\"form-control\">\n      <mat-label>Your email</mat-label>\n      <input matInput formControlName=\"email\" type=\"text\" />\n    </mat-form-field>\n\n    <!-- <mat-form-field class=\"form-control\">\n      <mat-label>User Photo</mat-label>\n      <input matInput formControlName=\"photo\" type=\"file\" />\n    </mat-form-field> -->\n    \n    <div class=\"form-footer\">\n      <button mat-stroked-button (click)=\"updateProfile()\">Update Info</button>\n    </div>\n  </form>","import { BrowserModule } from '@angular/platform-browser';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireMessagingModule } from '@angular/fire/messaging';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from 'src/environments/environment';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { RecordVideoComponent } from './record-video/record-video.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule, MatLabel } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { UserService } from './_services/user.service';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport { AlertifyService } from './_services/alertify.service';\nimport { ResetComponent } from './reset/reset.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {RecordingsComponent } from './recordings/recordings.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { FileSaverModule } from 'ngx-filesaver';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharingComponent } from './sharing/sharing.component';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport { VideoPageComponent } from './video-page/video-page.component';\n\n\n\n@NgModule({\n\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    RecordVideoComponent,\n    DashboardComponent,\n    ProfileComponent,\n    SidenavComponent,\n    ResetComponent,\n    RecordingsComponent,\n    SharingComponent,\n    VideoPageComponent\n    ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule,\n    AngularFireMessagingModule,\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatSidenavModule,\n    MatListModule,\n    MatDialogModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatGridListModule,\n    FileSaverModule,\n    ClipboardModule\n  ],\n  providers: [AngularFirestore,UserService, AlertifyService ],\n  bootstrap: [AppComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n\n\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {AngularFireDatabase} from '@angular/fire/database';\n@Component({\n  selector: 'app-video-page',\n  templateUrl: './video-page.component.html',\n  styleUrls: ['./video-page.component.scss']\n})\nexport class VideoPageComponent implements OnInit {\n  videoURL: string;\n  constructor(private db: AngularFireDatabase) { }\n\n  ngOnInit(): void {\n    // this.db.database.ref('videos/').child(key).get().then(res=>{\n    //   this.videoURL =res.val();\n    // });\n  }\n\n}\n","<p>video-page works!</p>\n<div>\n    <video #video id=\"video\" controls autoplay></video>\n</div>\n  ","<div style=\"margin-left: 20px\">\n    <div style=\"display: flex; align-items: center;margin: 15px; margin-left: 0\">\n        <button mat-flat-button (click)=\"start()\" [disabled]=\"clicked\" style=\"margin-right: 10px\" color=\"warn\">\n            Start Recording\n        </button>\n        <button mat-stroked-button (click)=\"stop()\" id=\"stop\" [disabled]=\"!clicked\" style=\"margin-right: 10px\">\n            Stop Recoding\n        </button>\n        <p style=\"padding-top: 15px;color: rgb(85, 85, 8);font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\">Max recording time is 10 minutes</p>\n    </div>\n\n    <video #video id=\"video\" controls autoplay></video>\n    <mat-card style=\"width: 400px;margin-top: 10px;\">\n        <h4 style=\"margin-left: 20px\">To upload video enter name:</h4>\n        <div style=\"display: flex; align-items: center; margin-left: 20px\">\n            <mat-form-field class=\"example-form-field\">\n                <mat-label>Video Name</mat-label>\n                <input matInput type=\"text\" [(ngModel)]=\"videoName\" />\n            </mat-form-field>\n\n            <button [disabled]=\"!videoName\" style=\"margin-left: 25px\" mat-stroked-button (click)=\"upload()\">\n                upload Video\n            </button>\n            <img *ngIf=\"percentage == 100\" style=\"width: 32px; height: 32px ;margin-left: 15px;\"\n                src=\"../../assets/icons/check-circle-regular.svg\" />\n\n            <mat-progress-spinner *ngIf=\"percentage != 100\" style=\"margin-left: 15px\" [color]=\"color\" [mode]=\"mode\"\n                [value]=\"percentage\" [diameter]=\"30\">\n            </mat-progress-spinner>\n        </div>\n    </mat-card>\n</div>","import { TypeofExpr } from '@angular/compiler';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport {\n  AngularFireStorage,\n  AngularFireStorageReference,\n} from '@angular/fire/storage';\nimport { ThemePalette } from '@angular/material/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\nimport { Observable } from 'rxjs';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { UserService } from '../_services/user.service';\n\n\n\n@Component({\n  selector: 'app-record-video',\n  templateUrl: './record-video.component.html',\n  styleUrls: ['./record-video.component.css'],\n})\nexport class RecordVideoComponent implements OnInit  {\n \n  get videoElement(): HTMLVideoElement {\n    return this.videoElementRef.nativeElement;\n  }\n  recorded=false;\n  clicked = false;\n  save = false;\n  private recordedChunks: any[] = [];\n  downloadURL: Observable<string>;\n  percentage = 0;\n  color: ThemePalette = 'warn';\n  mode: ProgressSpinnerMode = 'determinate';\n  videoName: string;\n  constructor(\n    private userService: UserService,\n    private afStorage: AngularFireStorage,\n    private alertify: AlertifyService,\n    public dialog: MatDialog,\n    private db:AngularFireDatabase\n  ) {}\n  \n\n  @ViewChild('video') videoElementRef: ElementRef;\n  // tslint:disable-next-line: typedef\n  ngOnInit() {}\n  start(): void {\n    if (this.videoElement.src) {\n      this.alertify.confirm(\n        'Recored Again',\n        'Unsaved recordings will be deleted',\n        () => {\n          this.startRecording();\n        }\n      );\n    } else {\n      this.startRecording();\n    }\n  }\n  async stop() {\n    console.log('stop called');\n    this.clicked = false;\n    this.videoElement.muted = false;\n    if (this.videoElement.srcObject) {\n      // @ts-ignore\n      this.videoElement.srcObject.getTracks().forEach((track) => {\n        track.stop();\n      });\n    }\n    this.videoElement.srcObject = null;\n    await this.delay(300);\n\n    this.save = true;\n    this.recorded =true;\n    const superBuffer = new Blob(this.recordedChunks);\n    this.videoElement.src = window.URL.createObjectURL(superBuffer);\n  }\n\n  // tslint:disable-next-line: typedef\n  async startRecording() {\n    let audioTrack: MediaStreamTrack;\n    let videoTrack: MediaStreamTrack;\n    let stream: MediaStream;\n\n    // @ts-ignore\n    navigator.mediaDevices.getDisplayMedia({\n        video: true,\n      })\n      .then((displayStream: any) => {\n        displayStream.oninactive = async () => {\n          await document.getElementById('stop')?.click();\n          return;\n        };\n        [videoTrack] = displayStream.getVideoTracks();\n        navigator.mediaDevices\n          .getUserMedia({\n            audio: true,\n          })\n          .then((audioStream) => {\n            [audioTrack] = audioStream.getAudioTracks();\n            stream = new MediaStream([videoTrack, audioTrack]);\n\n            this.videoElement.srcObject = stream;\n            this.videoElement.muted = true;\n            const options = {\n              videoBitsPerSecond : 800000,\n              mimeType: 'video/webm; codecs=vp9;' };\n\n            // @ts-ignore\n            const recorder = new MediaRecorder(stream, options);\n            recorder.ondataavailable = this.handleDataAvailable.bind(this);\n            this.delay(50).then(() => {\n              recorder.start();\n              this.waitTen().then(()=>{\n                document.getElementById('stop')?.click()\n                this.alertify.warning('Max video lenght 10 min reached');\n                });\n              this.clicked = true;\n              recorder.onstop = this.stop.bind(this);\n            });\n          });\n      });\n  }\n\n  // @ts-ignore\n  // tslint:disable-next-line: typedef\n  handleDataAvailable(event) {\n    if (event.data.size > 0) {\n      console.log(this.recordedChunks);\n      this.recordedChunks.push(event.data);\n    }\n  }\n  upload(): void {\n\n    const metadata = {\n      contentType: 'video/webm',\n    };\n    const superBuffer = new Blob(this.recordedChunks);\n\n    const task = this.afStorage\n                      .ref(this.userService.user.uid)\n                      .child(this.videoName)\n                      .put(superBuffer, metadata);\n    this.videoName = '';\n    task.snapshotChanges().subscribe(\n      (s: any) => {\n        console.log(s);\n        this.percentage = (s.bytesTransferred / s.totalBytes) * 100;\n        \n      },\n      (err: any) => {\n        this.alertify.error('Uploading Failed');\n      },\n      (res:any) => {\n        this.alertify.success('Video Uploaded Successfuly');\n        \n      }\n    );\n  }\n  delay(ms: number): Promise<any> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n  waitTen(){\n    return new Promise((resolve)=> setTimeout(resolve,600000));\n  }\n  \n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  videoURL: string;\n  videoTitle:string;\n}\n@Component({\n  selector: 'app-sharing',\n  templateUrl: './sharing.component.html',\n  styleUrls: ['./sharing.component.scss']\n})\nexport class SharingComponent implements OnInit {\n  facebookURL: string;\n  twitterURL: string;\n  linkedinURL: string;\n  whatsappURL: string;\n  email:string;\n  constructor(\n    public dialogRef: MatDialogRef<SharingComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n    const encodedVideoURL = encodeURI(this.data.videoURL);\n    const encodedVideoTitle =encodeURI(this.data.videoTitle);\n\n    this.facebookURL = `https://www.facebook.com/sharer.php?u=${encodedVideoURL}`;\n    this.twitterURL = `https://twitter.com/share?url=${encodedVideoURL}&text=${encodedVideoTitle}`;\n    this.linkedinURL =  `https://www.linkedin.com/shareArticle?url=${encodedVideoURL}&title=${encodedVideoTitle}`;\n    this.whatsappURL =     `https://wa.me/?text=${encodedVideoTitle} ${encodedVideoURL}`;\n    this.email =`mailto:?subject=I wanted you to check this video&amp;&body=Check out this site ${this.data.videoURL}.`;\n\n  }\n\n}\n","<p>Share your video!</p>\n\n<div class=\"sharing-container\">\n  <textarea disabled matInput style=\"margin-bottom: 20px;\" [value]=\"data.videoURL\"></textarea>\n  <button mat-stroked-button [cdkCopyToClipboard]=\"data.videoURL\" title=\"Copy\">\n    Copy to ClipBoard\n    <i class=\"fas fa-copy\"></i>\n  </button>\n</div>\n\n<div class=\"share-btn-container\">\n    <a [href]=\"facebookURL\" class=\"facebook-btn\">\n      <i class=\"fab fa-facebook\"></i>\n    </a>\n\n    <a [href]=\"twitterURL\" class=\"twitter-btn\">\n      <i class=\"fab fa-twitter\"></i>\n    </a>\n\n    <a [href]=\"email\" class=\"pinterest-btn\">\n      <i class=\"fas fa-envelope\"></i>\n    </a>\n\n    <a [href]=\"linkedinURL\" class=\"linkedin-btn\">\n      <i class=\"fab fa-linkedin\"></i>\n    </a>\n\n    <a [href]=\"whatsappURL\" class=\"whatsapp-btn\">\n      <i class=\"fab fa-whatsapp\"></i>\n    </a>\n  </div>\n","import { NgModule } from '@angular/core';\nimport {\n  Routes,\n  RouterModule,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot,\n} from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport {\n  redirectUnauthorizedTo,\n  redirectLoggedInTo,\n  canActivate,\n} from '@angular/fire/auth-guard';\nimport { RegisterComponent } from './register/register.component';\nimport { pipe } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RecordVideoComponent } from './record-video/record-video.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ResetComponent } from './reset/reset.component';\nimport { RecordingsComponent } from './recordings/recordings.component';\nimport { VideoPageComponent } from './video-page/video-page.component';\n\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo(['login']);\nconst redirectToDashboard = redirectLoggedInTo(['']);\nconst redirectToDashboardWithLogger = (\n  next: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot\n) =>\n  pipe(\n    tap(() => console.info('it will be redirected')),\n    redirectToDashboard\n  );\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecordVideoComponent,\n    ...canActivate(redirectUnauthorizedToLogin),\n  },\n  {\n    path: 'record',\n    component: RecordVideoComponent,\n    ...canActivate(redirectUnauthorizedToLogin),\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    ...canActivate(redirectUnauthorizedToLogin),\n  },\n  {\n    path: 'recordings',\n    component: RecordingsComponent,\n    ...canActivate(redirectUnauthorizedToLogin),\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    ...canActivate(redirectToDashboardWithLogger),\n  },\n  { path: 'reset', component: ResetComponent },\n  { path: 'register', component: RegisterComponent },\n  {path: 'video/:videoId',component:VideoPageComponent}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private auth: AngularFireAuth,\n    private router: Router,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n    });\n  }\n\n  onLogin() {\n    if(this.loginForm.invalid) return;\n    const { email, password } = this.loginForm.value;\n    this.auth\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.alertify.success('LoggedIn Successfully');\n      this.router.navigate([''])})\n      .catch(err=>this.alertify.error('Login Failed'));\n  }\n\n}\n","<div>\n  <h2>Please Login</h2>\n\n  <form class=\"form\" [formGroup]=\"loginForm\">\n    <mat-form-field class=\"form-control\">\n      <mat-label>Your email</mat-label>\n      <input matInput formControlName=\"email\" type=\"text\" name=\"email-hasura\" />\n    </mat-form-field>\n    <mat-form-field class=\"form-control\">\n      <mat-label>Your password</mat-label>\n      <input matInput formControlName=\"password\" type=\"password\" />\n    </mat-form-field>\n    <div class=\"form-footer\">\n      <button mat-stroked-button (click)=\"onLogin()\">login</button>\n      <a routerLink=\"/register\">create a user</a>\n    </div>\n    <div style=\"text-align: center;margin-top: 20px;\">\n      <a href=\"reset\">Reset Your Password</a>\n    </div>\n    <!-- <button mat-button (click)=\"onLoginWithGoogle()\">login with Google</button> -->\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\n//@ts-ignore\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertifyService {\n  constructor() {}\n  confirm(title: string, message: string, okCallback: () => any) {\n    alertify.confirm(\n      title,\n      message,\n      function (e: any) {\n        if (e) {\n          okCallback();\n        } else {\n        }\n      },\n      oncancel\n    );\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}